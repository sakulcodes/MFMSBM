membershipAverage <- Reduce("+", membershipMatrices)/niters #calculating the average here
SqError <- sapply(membershipMatrices, function(x, av) sum((x - av)^2),
av = membershipAverage)
DahlIndex <- which.min(SqError) #getting the DahlIndex
DahlAns <- iters[[DahlIndex]]
attr(DahlAns, "iterIndex") <- burn + DahlIndex
attr(DahlAns, "burnin") <- burn
DahlAns #the result(i.e the zout and qout)
}
getwd()
setwd("/Users/sakulmahat/Desktop/MFMSBM/R")
getwd()
getwd()
library(MFMSBM)
library(MFMSBM)
?logmargs
?CDMFM_new
usethis::use_data(dolphindata, compress = "xz")
usethis::use_data(dolphindata, compress = "xz")
usethis::use_data(dolphindata.RData, compress = "xz")
getwd()
usethis::use_data(dolphindata, compress = "xz")
usethis::use_data(dolphindata.rda, compress = "xz")
library(MFMSBM)
usethis::use_readme_rmd()
?usethis
?usethis(badge)
use_github_action_check_standard()
usethis::use_github_action_check_standard()
library(usethis)
use_testthat()
use_test()
getwd()
setwd("/Users/sakulmahat/Desktop/MFMSBM/R")
use_test()
library(MFMSBM)
?logmargs
logmargs(c(1,1,1),matrix(data =1:6),nrow=3, ncol = 3),1,3,3)
logmargs(c(1,1,1),matrix(data =1:6,nrow=3, ncol = 3),1,3,3)
logmargs(c(1,1,1),matrix(data =1:12,nrow=3, ncol = 3),1,3,3)
logmargs(c(1,1,1),matrix(data =1:10,nrow=3, ncol = 3),1,3,3)
matrix(data = 1:11, nrow = 3, ncol = 3)
matrix(data = 1:5, nrow = 3, ncol = 3)
matrix(data = 1:11, nrow = 3, ncol = 3)
matrix(data = 1:9, nrow = 3, ncol = 3)
logmargs(c(1,1,1),matrix(data =1:9,nrow=3, ncol = 3),1,3,3)
logmargs(c(1,1,1),matrix(data =1:9,nrow=3, ncol = 3),1,2,3)
logmargs(c(2,2,3),matrix(data =1:9,nrow=3, ncol = 3),1,2,3)
logmargs(c(2,2,4),matrix(data =1:9,nrow=3, ncol = 3),1,2,3)
logmargs(c(1,1,1),matrix(data =1:9,nrow=3, ncol = 3),1,2,3)
logmargs(c(100,100,100),matrix(data =1:9,nrow=3, ncol = 3),5,4,4)
logmargs(c(8,8,8),matrix(data =1:9,nrow=3, ncol = 3),5,4,4)
logmargs(c(8,8,8),matrix(data =1:9,nrow=3, ncol = 3),3,4,4)
loglike?
2
loglike
loglike?
2
?getDahl
?loglike
?loglike
loglike(c(1,1,1),matrix(data = 1:10, nrow = 5, ncol = 5,4,2))
loglike(c(1,1,1),matrix(data = 1:10, nrow = 5, ncol = 5),4,2))
loglike(c(1,1,1),matrix(data = 1:10, nrow = 5, ncol = 5),4,2)
matrix(data = 1:10, nrow = 5 , ncol = 5)
matrix(data = 1:25, nrow = 5 , ncol = 5)
loglike
loglike(c(2,3,4),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9),nrow=3,ncol=3),2,4)
loglike(c(2,3,4),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9),nrow=3,ncol=3,2,4)
loglike(c(2,3,4),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),2,4)
loglike(c(2,3,4),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9),nrow=3,ncol=3,1,1)
loglike(c(2,3,4),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),1,1)
loglike(c(1,1,1),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),2,2)
loglike(c(5,5,5),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),1,1)
loglike(c(5,5,5),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),4,5)
loglike(c(5,5,5),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),4,4)
loglike(c(5,5,5),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),2,3)
loglike(c(5,5,5),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),2,3)
?CDMFM_new
CDMFM_new(matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9),nrow=3,ncol=3),2,3,3,3,3,1,2)
CDMFM_new(matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),2,3,3,3,3,1,2)
CDMFM_new(matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),2,3,3,3,3,1)
CDMFM_new(matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),2,3,3,3,3,2)
CDMFM_new(matrix(data=1:30,nrow=10,ncol=10),matrix(data=1:9,nrow=3,ncol=3),2,3,3,3,3,2)
CDMFM_new(matrix(data=1:9,nrow=9,ncol=9),matrix(data=1:9,nrow=3,ncol=3),2,3,3,3,3,1,2)
CDMFM_new(matrix(data=1:9,nrow=9,ncol=9),matrix(data=1:9,nrow=3,ncol=3),2,3,3,3,3,1)
getD
getDahl?
2
getDahl?
2
getDahl(2,2)
CDMFM_new(matrix(data=1:9,nrow=9,ncol=9),matrix(data=1:9,nrow=3,ncol=3),1,1,1,1,1)
CDMFM_new(matrix(data=1:9,nrow=9,ncol=9),matrix(data=1:9,nrow=3,ncol=3),1,1,1,1,1,1)
A <- matrix(0,n,n)
n <- 10
A <- matrix(0,n,n)
A
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 100, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 2
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 100, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
A
AAA
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
CDMFM_new(data = A, data1 = AAA, niterations = 100, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
n
CDMFM_new(data = A, data1 = AAA, niterations = , beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
CDMFM_new(data = A, data1 = AAA, niterations = 1 , beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 2
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 1 , beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 2
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 1 , beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 2
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 2 , beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 100
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 100, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 1
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 2
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 100
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 100
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 100
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
fit
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
result1 = getDahl(fit1, burn = 50)
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
result1 = getDahl(fit1, burn = 1)
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 9)
fit1
library(MFMSBM)
?logmargs
?CDMFM_new
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,2)
getDahl(fit1,3)
getDahl(fit1,4)
getDahl(fit1,5)
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)
getDahl
getDahl(fit1,1)
matrix(data=0.02431389,nrow = 1,ncol=1)
library(MFMSBM)
?getDahl
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
test_that("getDahl function works", {
expect_equal(getDahl(fit1,1)$zout, c(1,1,1,1,1,1,1,1,1))
expect_equal(getDahl(fit1,1)$Qout, matrix(data=0.02431389,nrow = 1,ncol=1))
})
library(usethis)
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
test_that("getDahl function works", {
expect_equal(getDahl(fit1,1)$zout, c(1,1,1,1,1,1,1,1,1))
expect_equal(getDahl(fit1,1)$Qout, matrix(data=0.02431389,nrow = 1,ncol=1))
})
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
fit1
git1$zout
fit1$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
#getDahl(fit1,1)$Qout
CDMFM_new
CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
a <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
#getDahl(fit1,1)$Qout
a
a$zout
a$Iterates
a$Iterates$zout
a
a
a$Iterates[[1]]$zout
a$Iterates[[2]]$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
a <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
#getDahl(fit1,1)$Qout
a$Iterates[[2]]$zout
a$Iterates[[2]]$zout
a$Iterates[[2]]$zout
a$Iterates[[2]]$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
a <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
#getDahl(fit1,1)$Qout
a$Iterates[[1]]$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
a <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
#getDahl(fit1,1)$Qout
a$Iterates[[1]]$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
a <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
#getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
a <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
#getDahl(fit1,1)$Qout
expect_equal(CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$zout, c(1,1,1,1,1,1,1,1,1))
test_that("CDMFM_new function works", {
expect_equal(CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$zout, c(1,1,1,1,1,1,1,1,1))
})
#######################################Testing_logmargs_function#######################################
test_that("logmargs function works", {
cluster
expect_equal(logmargs(c(2,2,3),matrix(data =1:9,nrow=3, ncol = 3),1,2,3), Inf)
expect_equal(logmargs(c(2,2,4),matrix(data =1:9,nrow=3, ncol = 3),1,2,3), Inf)
expect_equal(logmargs(c(2,2,4),matrix(data =1:9,nrow=3, ncol = 3),1,2,3), NaN)
expect_equal(logmargs(c(8,8,8),matrix(data =1:9,nrow=3, ncol = 3),3,4,4), 0)
})
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
a <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
#getDahl(fit1,1)$Qout
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$zout
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$Iterates[[1]]$zout
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$zout
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$zout
library(MFMSBM)
loglike(c(2,3,4),matrix(data=1:25,nrow=5,ncol=5),matrix(data=1:9,nrow=3,ncol=3),1,1)
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$zout
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$zout[1]
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$Iterates[[1]]
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$Iterates[[1]]$zout
CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)$Iterates[[1]]$zout[1]
library(MFMSBM)
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
source("MFMSBM.R")
getwd()
setwd("/Users/sakulmahat/Desktop/MFMSBM/R")
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)
getDahl(fit1,1)$zout
getDahl(fit1,1)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,10)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,9)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,2)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 2, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
getDahl(fit1,1)$zout
getDahl(fit1,1)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,0)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
getDahl(fit1,1)$zout
get(fit1,1)$Qouut
get(fit1,1)$Qout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 3, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
getDahl(fit2,1)$zout * 0
getDahl(fit1,1)$zout * 0
getDahl(fit1,1)$zout * 0
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
getDahl(fit1,1)$Qout
source("MFMSBM.R")
n <- 10
A <- matrix(0,n,n)
AAA <- matrix(0,n,n)
fit1 <- CDMFM_new(data = A, data1 = AAA, niterations = 1, beta.a = 1, beta.b = 1, GAMMA=1, LAMBDA = 1, initNClusters = 1)
#getDahl(fit1,1)$zout
getDahl(fit1,2)$Qout
